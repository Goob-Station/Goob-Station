name: REUSE Compliance Automation (C# Only)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  add-headers:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.BOT_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install REUSE tool
      run: pip install reuse

    - name: Configure REUSE
      run: |
        mkdir -p .reuse
        cat << EOF > .reuse/dep5
        Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
        Files: **/*.cs
        Copyright: \$YEAR-\$CURRENT_YEAR \$AUTHOR <\$EMAIL>
        License: MIT
        
        License: MIT
          SPDX-Identifier: MIT
          License-File: LICENSE.TXT
        
        License: AGPL-3.0-or-later
          SPDX-Identifier: AGPL-3.0-or-later
          License-File: LICENSE-AGPLv3.txt
        EOF

    - name: Get PR labels
      id: get-labels
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.BOT_TOKEN }}
        script: |
          const { data: labels } = await github.rest.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          })
          return labels.map(label => label.name).join(',')

    - name: Determine license
      id: determine-license
      run: |
        if [[ "${{ steps.get-labels.outputs.result }}" == *"AGPL"* ]]; then
          echo "SPDX=AGPL-3.0-or-later" >> $GITHUB_OUTPUT
        elif [[ "${{ steps.get-labels.outputs.result }}" == *"MIT"* ]]; then
          echo "SPDX=MIT" >> $GITHUB_OUTPUT
        else
          echo "SPDX=" >> $GITHUB_OUTPUT
        fi

    - name: Add headers to C# files
      if: ${{ steps.determine-license.outputs.SPDX != '' }}
      run: |
        AUTHOR_NAME=$(git log -1 --pretty=format:"%an")
        AUTHOR_EMAIL=$(git log -1 --pretty=format:"%ae")
        
        FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.cs$')

        for FILE in $FILES; do
          if [ -f "$FILE" ]; then
            if ! reuse lint "$FILE"; then
              reuse addheader \
                --license "${{ steps.determine-license.outputs.SPDX }}" \
                --copyright "$AUTHOR_NAME <$AUTHOR_EMAIL>" \
                --style c \
                "$FILE"
              
              sed -i '1s|^/*|//|; 1s|*/$||' "$FILE"
            fi
          fi
        done
        
    - name: Commit and push changes
      if: ${{ steps.determine-license.outputs.SPDX != '' }}
      run: |
        git add -u
        git commit -m "Add REUSE compliance headers" || exit 0
        git push
