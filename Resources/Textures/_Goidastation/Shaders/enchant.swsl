// Adapted from https://www.shadertoy.com/view/lXKyzK by user Lunastela
// License: CC-BY-NC-SA 3.0

light_mode unshaded;

mediump vec2 square_uv(mediump vec2 coord, mediump vec2 res) {
	if (res.x >= res.y)
		coord.x = (coord.x + (res.y - res.x) * 0.5) * res.x / res.y;
	else
		coord.y = (coord.y + (res.x - res.y) * 0.5) * res.y / res.x;
	return coord / res;
}

const mediump vec3 gradientColor = vec3(167. / 255., 85. / 255., 1.) * 0.6;
mediump vec3 enchantmentShine(mediump vec2 uv, mediump float time) {
	mediump float n = max(sin(uv.x + time * 11.0) * 0.4 - 0.2, 0.0);
	n += max(zFBM(vec2(uv.x + time * uv.y + time * 1.7, 3.0)) - 0.4, 0.0);
	n += max(zFBM(vec2(uv.x + time * 0.5 * uv.y + time * 3.5, 3.0)) * 0.7 - 0.4, 0.0);
	n += max(cos(uv.y + time * 7.0) - 0.7, 0.0);
	return gradientColor * min(n, 1.0);
}

void fragment() {
	highp vec4 sprite = zTexture(UV);
	if (sprite.a == 0.0) {
		discard;
	}

	highp vec2 uv = square_uv(floor(FRAGCOORD.xy * 0.0625) * 0.5, SCREEN_PIXEL_SIZE);
	mediump vec3 shine = enchantmentShine(uv, TIME * 0.1);
	COLOR = vec4(shine * 0.65 + sprite.rgb, 1.0);
}
