uniform sampler2D SCREEN_TEXTURE;
uniform highp float radius;
uniform highp float speed;
uniform highp vec4 effect_color;

// Made by Silver637 in godotshaders.com
// Name: Dark Noise Vignette

highp float snoise(highp vec3 uv, highp float res)
{
    const highp vec3 s = vec3(1.0, 100.0, 1000.0);
    uv *= res;

    highp vec3 uv0 = floor(mod(uv, res)) * s;
    highp vec3 uv1 = floor(mod(uv + vec3(1.0), res)) * s;

    highp vec3 f = fract(uv);
    f = f * f * (3.0 - 2.0 * f);

    highp vec4 v = vec4(
        uv0.x + uv0.y + uv0.z,
        uv1.x + uv0.y + uv0.z,
        uv0.x + uv1.y + uv0.z,
        uv1.x + uv1.y + uv0.z
    );

    highp vec4 r = fract(sin(v * 0.10) * 1000.0);
    highp float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);

    r = fract(sin((v + uv1.z - uv0.z) * 0.1) * 1000.0);
    highp float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);

    return mix(r0, r1, f.z) * 2.0 - 1.0;
}

void fragment()
{
    highp vec4 base = texture2D(SCREEN_TEXTURE, UV);
    highp vec2 p = (UV - 0.5) * radius;
    highp float color = 3.7 - (3.0 * length(2.0 * p));

    highp vec3 coord = vec3(
        atan(p.x, p.y) / 6.2832 + 0.2,
        length(p) * 0.4,
        0.1
    );

    highp float time = -TIME / speed;
    for (int i = 1; i <= 7; i++)
    {
        highp float power = pow(2.0, float(i));
        color += (0.8 / power) *
            snoise(coord + vec3(0.0, -time * 0.05, time * 0.01), power * 16.0);
    }

    highp float alpha = 1.004 - smoothstep(effect_color.a, 1.0, color);
    highp vec3 fire = vec3(
        color - (1.0 - effect_color.r),
        color - (1.0 - effect_color.g),
        color - (1.0 - effect_color.b)
    );

    highp vec3 final = mix(base.rgb, fire, alpha);
    COLOR = vec4(final, base.a);
}
