- type: entity
  parent: BaseItem
  id: AACTablet
  name: AAC tablet
  description: An "augmentative and alternative communication" device that allows speech-impaired individuals to communicate.
  components:
  - type: Sprite
    sprite: _DV/Objects/Devices/tablets.rsi
    layers:
    - state: aac_tablet
    - state: aac_screen
      shader: unshaded
    state: icon
  - type: Item
    inhandVisuals:
      left:
      - state: aac-inhand-left
      - state: aac_screen-inhand-left
        shader: unshaded
      right:
      - state: aac-inhand-right
      - state: aac_screen-inhand-right
        shader: unshaded
  - type: ActivatableUI
    singleUser: false
    key: enum.AACTabletKey.Key
  - type: Damageable
    damageContainer: Inorganic
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 100
      behaviors:
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: UserInterface
    interfaces:
      enum.AACTabletKey.Key:
        type: AACBoundUserInterface
  - type: Speech
    speechSounds: Alto
  - type: AACTablet
  - type: VoiceMask
    # Goob changes due to languages:
  - type: LanguageSpeaker #This should get added regardless on startup but eh future planning or whatever.
  - type: EncryptionKeyHolder # This holds a 'language' encryption key that can be added to the tablet.
    keyslots: 1 #todo later marty: at some point add func and UI for multiple keys.
  - type: LanguageKnowledge # Languages are not held here, this gets autoupdated. They are held in the encryp key.
  - type: ContainerFill
    containers:
      key_slots: #Hijacking.
      - EncryptionKeyCommon #todo now marty # Tau-ceti default, i assume ill implement checks if need to spawn for other languages in whateever system.cs
