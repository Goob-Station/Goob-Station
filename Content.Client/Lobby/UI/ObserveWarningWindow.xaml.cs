// SPDX-FileCopyrightText: 2021 moonheart08 <moonheart08@users.noreply.github.com>
// SPDX-FileCopyrightText: 2022 Paul Ritter <ritter.paul1@googlemail.com>
// SPDX-FileCopyrightText: 2022 wrexbe <81056464+wrexbe@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Aidenkrz <aiden@djkraz.com>
// SPDX-FileCopyrightText: 2024 Repo <47093363+Titian3@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 Aiden <28298836+Aidenkrz@users.noreply.github.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

using Content.Shared.Administration.Managers;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.Player;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Lobby.UI;

[GenerateTypedNameReferences]
[UsedImplicitly]
public sealed partial class ObserveWarningWindow : DefaultWindow
{
    [Dependency] private readonly ISharedAdminManager _adminManager = default!;
    [Dependency] private readonly IPlayerManager _playerManager = default!;

    public ObserveWarningWindow()
    {
        Title = Loc.GetString("observe-warning-window-title");
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        var player = _playerManager.LocalSession;

        if (player != null && _adminManager.IsAdmin(player))
        {
            ObserveButton.Text = Loc.GetString("observe-as-player");
            ObserveAsAdminButton.Visible = true;
            ObserveAsAdminButton.OnPressed += _ => { this.Close(); };
        }

        ObserveButton.OnPressed += _ => { this.Close(); };
        NevermindButton.OnPressed += _ => { this.Close(); };
    }
}