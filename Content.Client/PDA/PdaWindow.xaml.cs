// SPDX-FileCopyrightText: 2022 Julian Giebel <juliangiebel@live.de>
// SPDX-FileCopyrightText: 2023 0x6273 <0x40@keemail.me>
// SPDX-FileCopyrightText: 2023 TemporalOroboros <TemporalOroboros@gmail.com>
// SPDX-FileCopyrightText: 2023 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 Aiden <28298836+Aidenkrz@users.noreply.github.com>
//
// SPDX-License-Identifier: MIT

using System.Numerics;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.PDA;

[Virtual]
[GenerateTypedNameReferences]
public partial class PdaWindow : BaseWindow
{

    public string? BorderColor
    {
        get => Background.ActualModulateSelf.ToHex();

        set => Background.ModulateSelfOverride = Color.FromHex(value, Color.White);
    }

    public string? AccentHColor
    {
        get => AccentH.ActualModulateSelf.ToHex();

        set
        {
            AccentH.ModulateSelfOverride = Color.FromHex(value, Color.White);
            AccentH.Visible = value != null;
        }
    }

    public string? AccentVColor
    {
        get => AccentV.ActualModulateSelf.ToHex();

        set
        {
            AccentV.ModulateSelfOverride = Color.FromHex(value, Color.White);
            AccentV.Visible = value != null;
        }
    }

    public PdaWindow()
    {
        RobustXamlLoader.Load(this);

        CloseButton.OnPressed += _ => Close();
        XamlChildren = ContentsContainer.Children;

        AccentH.Visible = false;
        AccentV.Visible = false;
    }

    protected override DragMode GetDragModeFor(Vector2 relativeMousePos)
    {
        return DragMode.Move;
    }
}