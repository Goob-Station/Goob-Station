using System.Linq;
using Content.Client._Goobstation.CatridgeLoader.Cartridges;
using Content.Client.PDA;
using Content.Shared._Goobstation.MULE.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Goobstation.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class MuleWranglerUiFragment : BoxContainer
{
    [Dependency] private readonly EntityManager _entityManager = default!;
    public MuleWranglerUiFragment()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        Setup();
    }

    public void UpdateState(MuleWranglerUiState state)
    {
    }

    public void Populate()
    {
        var query = _entityManager.EntityQueryEnumerator<MuleComponent>();
        int count = _entityManager.EntityQuery<MuleComponent>().Count();
        Logger.Debug(count.ToString());
        if (count <= 0)
        {
            return;
        }
        if (ButtonContainer.Children.Count() > 0)
        {
            ButtonContainer.RemoveAllChildren();
        }


        while (query.MoveNext(out var uid, out var component))
        {
            Logger.Debug(uid.ToString());
            var newButton = new PdaSettingsButton();
            newButton.Text = "MuleBot " + uid.Id;
            ButtonContainer.AddChild(newButton);
        }

        foreach(var control in ButtonContainer.Children)
        {
            if(control is PdaSettingsButton pdaButton)
                pdaButton.OnPressed += _ => Setup();
        }
    }

    public void Setup()
    {
        if (ButtonContainer.Children.Count() > 0)
        {
            ButtonContainer.RemoveAllChildren();
        }
        var selectButton = new PdaSettingsButton();
        var orderButton = new PdaSettingsButton();
        var destinationButton = new PdaSettingsButton(); // localize below
        selectButton.Text = "Select";
        selectButton.Description = "Select MULE to control";
        orderButton.Text = "Order";
        orderButton.Description = "Give MULE an order.";
        destinationButton.Text = "Destination";
        destinationButton.Description = "Set MULE's Destination";
        ButtonContainer.AddChild(selectButton);
        ButtonContainer.AddChild(orderButton);
        ButtonContainer.AddChild(destinationButton);
        selectButton.OnPressed += _ => Populate();
    }
}
