using Content.Client.UserInterface.Controls;
using Content.Goobstation.Shared.Factory.Filters;
using Content.Shared.Mobs;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Goobstation.Client.Factory.UI;

[GenerateTypedNameReferences]
public sealed partial class MobFilterWindow : FancyWindow
{
    public event Action<MobState>? OnToggle;

    public MobFilterWindow()
    {
        RobustXamlLoader.Load(this);

        AliveButton.OnPressed += _ => OnToggle?.Invoke(MobState.Alive);
        DeadButton.OnPressed += _ => OnToggle?.Invoke(MobState.Dead);
        CriticalButton.OnPressed += _ => OnToggle?.Invoke(MobState.Critical);
    }

    public void SelectValues(HashSet<MobState> states)
    {
        AliveButton.Pressed = states.Contains(MobState.Alive);
        DeadButton.Pressed = states.Contains(MobState.Dead);
        CriticalButton.Pressed = states.Contains(MobState.Critical);
    }
}
