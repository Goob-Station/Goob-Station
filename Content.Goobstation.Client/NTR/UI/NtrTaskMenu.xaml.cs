// SPDX-FileCopyrightText: 2023 metalgearsloth <31366439+metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Killerqu00 <47712032+Killerqu00@users.noreply.github.com>
// SPDX-FileCopyrightText: 2024 Nemanja <98561806+EmoGarbage404@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 BarryNorfolk <barrynorfolkman@protonmail.com>
// SPDX-FileCopyrightText: 2025 BeBright <98597725+be1bright@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 GoobBot <uristmchands@proton.me>
// SPDX-FileCopyrightText: 2025 LuciferMkshelter <154002422+LuciferEOS@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 LuciferMkshelter <stepanteliatnik2022@gmail.com>
// SPDX-FileCopyrightText: 2025 pheenty <fedorlukin2006@gmail.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

using Content.Client.UserInterface.Controls;
using Content.Goobstation.Shared.NTR;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Goobstation.Client.NTR.UI;

[GenerateTypedNameReferences]
public sealed partial class NtrTaskMenu : FancyWindow
{
    public Action<string>? OnLabelButtonPressed;
    public Action<string>? OnSkipButtonPressed;

    public NtrTaskMenu()
    {
        RobustXamlLoader.Load(this);

        MasterTabContainer.SetTabTitle(0, Loc.GetString("bounty-console-tab-available-label"));
        MasterTabContainer.SetTabTitle(1, Loc.GetString("bounty-console-tab-history-label"));
    }

    /// <summary>
    /// Adds tasks to the UI
    /// </summary>
    /// <param name="tasks"></param>
    /// <param name="history"></param>
    /// <param name="untilNextSkip"></param>
    public void UpdateEntries(List<NtrTaskData> tasks, List<NtrTaskHistoryData> history, TimeSpan untilNextSkip)
    {
        BountyEntriesContainer.Children.Clear();
        foreach (var task in tasks)
        {
            var entry = new TaskEntry(task, untilNextSkip);
            entry.OnLabelButtonPressed += () => OnLabelButtonPressed?.Invoke(task.Id);
            entry.OnSkipButtonPressed += () => OnSkipButtonPressed?.Invoke(task.Id);

            BountyEntriesContainer.AddChild(entry);
        }
        BountyEntriesContainer.AddChild(new Control
        {
            MinHeight = 10
        });

        BountyHistoryContainer.Children.Clear();
        if (history.Count == 0)
        {
            NoHistoryLabel.Visible = true;
        }
        else
        {
            NoHistoryLabel.Visible = false;

            // Show the history in reverse, so last entry is first in the list
            for (var i = history.Count - 1; i >= 0; i--)
            {
                BountyHistoryContainer.AddChild(new NtrTaskHistoryEntry(history[i]));
            }
        }
    }
}
