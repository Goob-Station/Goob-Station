using System.Numerics;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Content.Client.Message;

namespace Content.Goobstation.Client.Books.Ui;

[GenerateTypedNameReferences]
public sealed partial class CustomBookWindow : BaseWindow
{
    [Dependency] private readonly IResourceCache _resCache = default!;

    private List<string> _pages = new();

    private int _currentPage = 0;

    public CustomBookWindow()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        // Should actually be in xaml but eh
        LeftPaperBackground.PanelOverride = new StyleBoxTexture
        {
            Texture = _resCache.GetResource<TextureResource>("/Textures/Interface/Paper/paper_background_book.svg.96dpi.png"),
            TextureScale = Vector2.One,
            Mode = StyleBoxTexture.StretchMode.Stretch,
            PatchMarginLeft = 23f,
            PatchMarginBottom = 16f,
            PatchMarginRight = 14f,
            PatchMarginTop = 15f
        };

        NextButton.OnPressed += args => SetPage(_currentPage + 1);
        PrevButton.OnPressed += args => SetPage(_currentPage - 1);

        // Hook up the close button:
        CloseButton.OnPressed += _ => Close();
    }

    private void SetPage(int page)
    {
        if (_currentPage < page && _pages.Count <= page)
            return;

        NextButton.Disabled = page + 1 >= _pages.Count;
        PrevButton.Disabled = page - 1 < 0;

        _currentPage = page;
        MainLabel.SetMarkup(_pages[_currentPage]);
        PageLabel.SetMarkup($"[font=Default size=22]Page {_currentPage + 1}[/font]");
    }

    public void Populate(List<string> pages)
    {
        _pages = pages;
        SetPage(_currentPage);
    }

    /// <summary>
    /// Allow dragging but not resizing(buggy)
    /// </summary>
    protected override DragMode GetDragModeFor(Vector2 relativeMousePos)
    {
        return DragMode.Move;
    }
}
