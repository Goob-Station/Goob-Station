using Content.Client.UserInterface.Controls;
using Content.Goobstation.Shared.Xenobiology.XenobiologyBountyConsole;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Goobstation.Client.Xenobiology.XenobiologyBountyConsole;

[GenerateTypedNameReferences]
public sealed partial class XenobiologyBountyMenu : FancyWindow
{
    public Action<string>? OnFulfillButtonPressed;
    public Action<string>? OnSkipButtonPressed;

    public XenobiologyBountyMenu()
    {
        RobustXamlLoader.Load(this);

        MasterTabContainer.SetTabTitle(0, Loc.GetString("bounty-console-tab-available-label"));
        MasterTabContainer.SetTabTitle(1, Loc.GetString("bounty-console-tab-history-label"));
    }

    public void UpdateEntries(List<XenobiologyBountyData> bounties, List<XenobiologyBountyHistoryData> history, TimeSpan untilNextSkip)
    {
        BountyEntriesContainer.Children.Clear();
        foreach (var bounty in bounties)
        {
            var entry = new XenobiologyBountyEntry(bounty, untilNextSkip);
            entry.OnFulfillButtonPressed += () => OnFulfillButtonPressed?.Invoke(bounty.Id);
            entry.OnSkipButtonPressed += () => OnSkipButtonPressed?.Invoke(bounty.Id);

            BountyEntriesContainer.AddChild(entry);
        }
        BountyEntriesContainer.AddChild(new Control
        {
            MinHeight = 10,
        });

        BountyHistoryContainer.Children.Clear();
        if (history.Count == 0)
        {
            NoHistoryLabel.Visible = true;
        }
        else
        {
            NoHistoryLabel.Visible = false;

            // Show the history in reverse, so last entry is first in the list
            for (var i = history.Count - 1; i >= 0; i--)
                BountyHistoryContainer.AddChild(new XenobiologyBountyHistoryEntry(history[i]));
        }
    }
}
