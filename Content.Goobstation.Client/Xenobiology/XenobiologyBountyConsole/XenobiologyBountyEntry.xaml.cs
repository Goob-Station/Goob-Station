// SPDX-FileCopyrightText: 2025 GoobBot <uristmchands@proton.me>
// SPDX-FileCopyrightText: 2025 SolsticeOfTheWinter <solsticeofthewinter@gmail.com>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

using System.Linq;
using Content.Client.Message;
using Content.Goobstation.Shared.Xenobiology.XenobiologyBountyConsole;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Timing;

namespace Content.Goobstation.Client.Xenobiology.XenobiologyBountyConsole;

[GenerateTypedNameReferences]
public sealed partial class XenobiologyBountyEntry : BoxContainer
{
    [Dependency] private readonly IPrototypeManager _prototype = default!;

    public Action? OnFulfillButtonPressed;
    public Action? OnSkipButtonPressed;

    private TimeSpan _untilNextSkip;

    public XenobiologyBountyEntry(XenobiologyBountyData bounty, TimeSpan untilNextSkip)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _untilNextSkip = untilNextSkip;

        if (!_prototype.TryIndex(bounty.Bounty, out var bountyPrototype))
            return;

        var points = (int) Math.Round(bountyPrototype.BasePointsAwarded * bounty.CurrentMultiplier);

        var items = bountyPrototype.Entries
            .Select(entry => Loc.GetString("bounty-console-manifest-entry",
                ("amount", entry.Amount),
                ("item", Loc.GetString(entry.Name))))
            .ToList();

        ManifestLabel.SetMarkup(Loc.GetString("bounty-console-manifest-label", ("item", string.Join(", ", items))));
        RewardLabel.SetMarkup(Loc.GetString("xenobiology-console-reward-label", ("reward", points)));
        IdLabel.SetMarkup(Loc.GetString("bounty-console-id-label", ("id", bounty.Id)));

        FulfillButton.OnPressed += _ => OnFulfillButtonPressed?.Invoke();
        SkipButton.OnPressed += _ => OnSkipButtonPressed?.Invoke();
    }

    private void UpdateSkipButton(float deltaSeconds)
    {
        _untilNextSkip -= TimeSpan.FromSeconds(deltaSeconds);
        if (_untilNextSkip > TimeSpan.Zero)
        {
            SkipButton.Label.Text = _untilNextSkip.ToString("mm\\:ss");
            SkipButton.Disabled = true;
            return;
        }

        SkipButton.Label.Text = Loc.GetString("bounty-console-skip-button-text");
        SkipButton.Disabled = false;
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);
        UpdateSkipButton(args.DeltaSeconds);
    }
}
