using Content.Shared.Preferences;
using Robust.Client.AutoGenerated;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared;
using Robust.Shared.Configuration;

namespace Content.Goobstation.Client.Silicon.UI;

[GenerateTypedNameReferences]
public sealed partial class SiliconNameMenu : BoxContainer
{
    public event Action<string>? OnNameChanged;

    private readonly HumanoidCharacterProfile? _profile;

    public SiliconNameMenu(HumanoidCharacterProfile? profile)
    {
        RobustXamlLoader.Load(this);
        _profile = profile;

        BorgNameEdit.Text = _profile?.BorgName ?? string.Empty;

        BorgNameRandomize.OnPressed += args => RandomizeBorgName();
        BorgNameEdit.OnTextChanged += args =>
        {
            if (!string.IsNullOrEmpty(args.Text))
                OnNameChanged?.Invoke(args.Text);
        };

        BorgNameRandomize.OnPressed += args =>
        {
            var randomName = HumanoidCharacterProfile.GetBorgName();
            BorgNameEdit.Text = randomName;
            OnNameChanged?.Invoke(randomName); // Вызываем событие
        };
    }

    // #Goobstation - More Borg Name Stuff
    private void UpdateBorgNameEdit()
    {
        BorgNameEdit.Text = _profile?.BorgName.ToString() ?? "";
    }

    // #Goobstation - Borg Preferred Name
    private void RandomizeBorgName()
    {
        if (_profile == null) return;
        var name = HumanoidCharacterProfile.GetBorgName();
        SetBorgName(name);
        UpdateBorgNameEdit();
    }
}
