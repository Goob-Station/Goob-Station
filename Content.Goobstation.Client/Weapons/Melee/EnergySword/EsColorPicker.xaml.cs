// SPDX-FileCopyrightText: 2025 BeBright <98597725+be1bright@users.noreply.github.com>
// SPDX-FileCopyrightText: 2025 GoobBot <uristmchands@proton.me>
//
// SPDX-License-Identifier: AGPL-3.0-or-later

using System.Linq;
using Content.Client.UserInterface.Controls;
using Content.Shared.Contraband;
using Content.Shared.Light;
using Content.Shared.Light.Components;
using Content.Shared.Toggleable;
using Content.Shared.Weapons.Melee.EnergySword;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Goobstation.Client.Weapons.Melee.EnergySword
{
    [GenerateTypedNameReferences]
    public sealed partial class EsColorPicker : FancyWindow
    {
        [Dependency] private readonly IEntitySystemManager _entitySystem = default!;
        [Dependency] private readonly IEntityManager _entManager = default!;
        private readonly SharedRgbLightControllerSystem _rgbSystem = default!;
        private readonly SharedAppearanceSystem _appearance = default!;

        private ColorSelectorSliders _rgbColorSelector;
        private Entity<EnergySwordComponent> _uid;
        private EntityUid _owner;
        public Action<Color>? OnConfirmButtonPressed;
        public Action<bool>? OnSecretButtonPressed;
        private bool _rgbActivated;

        public EsColorPicker()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);
            _appearance = _entitySystem.GetEntitySystem<SharedAppearanceSystem>();
            _rgbSystem = _entitySystem.GetEntitySystem<SharedRgbLightControllerSystem>();

            RgbColorContainer.AddChild(_rgbColorSelector = new ColorSelectorSliders());
            _rgbColorSelector.SelectorType = ColorSelectorSliders.ColorSelectorType.Hsv;
            _rgbColorSelector.OnColorChanged += ColorValueChanged;

            ConfirmButton.OnPressed += _ =>
            {
                OnConfirmButtonPressed?.Invoke(_rgbColorSelector.Color);
                OnSecretButtonPressed?.Invoke(_rgbActivated);
            };
            SecretButton.OnPressed += SecretButtonPressed;
        }

        private void SecretButtonPressed(BaseButton.ButtonEventArgs args)
        {
            _rgbActivated = !_rgbActivated;
            if (_rgbActivated)
            {
                _entManager.EnsureComponent<RgbLightControllerComponent>(_uid);
                _rgbSystem.SetCycleRate(_uid, _uid.Comp.CycleRate);
            }
            else
                _entManager.RemoveComponent<RgbLightControllerComponent>(_uid);
        }

        private void ColorValueChanged(Color newColor)
        {
            if (_entManager.TryGetComponent<AppearanceComponent>(_uid, out var appearance))
                _appearance.SetData(_uid, ToggleableVisuals.Color, newColor, appearance);
        }

        public void SetEntity(EntityUid entity, EntityUid owner)
        {
            if (!_entManager.TryGetComponent<EnergySwordComponent>(owner, out var energySwordOwner) ||
                !_entManager.TryGetComponent<EnergySwordComponent>(entity, out var energySword))
                return;

            if (_entManager.TryGetComponent<AppearanceComponent>(entity, out var appearance))
            {
                _appearance.SetData(entity, ToggleableVisuals.Enabled, true, appearance);
                _appearance.SetData(entity, ToggleableVisuals.Color, energySwordOwner.ActivatedColor, appearance);
            }

            _rgbColorSelector.Color = energySwordOwner.ActivatedColor;

            _uid = (entity, energySword);
            _owner = owner;
            EntityView.SetEntity(entity);
        }

        public void SetLogoAndFlavor(EntityUid entity)
        {
            if (_entManager.TryGetComponent<ContrabandComponent>(entity, out var contraband) &&
                contraband.AllowedDepartments.ToHashSet().Contains("CentralCommand"))
            {
                Logo.SetOnlyStyleClass("NTLogoDark");
                CollaborationText.Text = Loc.GetString("escolorpicker-menu-flavor-left-nanotrasen");
            }
            else
            {
                Logo.SetOnlyStyleClass("SyndicateLogo");
                CollaborationText.Text = Loc.GetString("escolorpicker-menu-flavor-left-syndicate");
            }

        }
    }
}
